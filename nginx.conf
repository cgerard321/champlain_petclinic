load_module modules/ngx_http_js_module.so;

worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    js_import njs/owners.js;

    sendfile        on;
    keepalive_timeout  65;
    server {
        listen       80;
        server_name  localhost;
        resolver 127.0.0.11; # Default Docker embedded DNS IP

        set $auth_origin "http://auth:8080";
        set $customers_origin "http://customers:8080";
        set $visits_origin "http://visits:8080";
        set $vets_origin "http://vets:8080";
        set $bills_origin "http://billing:8080";

        location /auth {
            internal;
            proxy_method  HEAD;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_pass $auth_origin/users;
        }

        location /login {
            proxy_pass $auth_origin/users/login;
        }

        location = /proxy/owners {
            internal;
            proxy_pass $customers_origin/owners;
        }

        location ~ ^/proxy/owners/(.*)$ {
            internal;
            proxy_pass $customers_origin/owners/$1;
        }
        
        location ~ /proxy/visits(.*) {
            internal;
            proxy_pass $visits_origin/visits$1;
        }

        location /api/gateway/ {
            proxy_intercept_errors on;
            error_page 403 = @Forbidden;
            auth_request /auth;
            auth_request_set $auth_status $upstream_status;

            location ~ ^/api/gateway/owners/pets/(.*)$ {
                proxy_pass $visits_origin/owners/literallyanything/pets/$1;
            }

            location ~ ^/api/gateway/owners/?$ {
                js_content owners.aggregation;
            }

            location ~ ^/api/gateway/owners/([^/]+)$ {
                js_content owners.singleAggregation;
            }

            location ~ /api/gateway/owners(.*) {
                proxy_pass $customers_origin/owners/$1;
            }

            location ~ ^/api/gateway/visits/([^/]+)/owners/pets/([^/]+)$ {
                proxy_pass $visits_origin/owners/literallyanything/pets/$2/visits/$1;
            }

            # Guess I'll fix it for you... Thank you VISITS team ðŸ˜ž
            location ~ ^/api/gateway/visits/pet/([^/]+)$ {
                proxy_pass $visits_origin/visits/$1;
            }

            location = /api/gateway/visits/pets {
                proxy_pass $visits_origin/pets/visits$is_args$args;
            }

            location ~ ^/api/gateway/visits/([^/]+)$ {
                proxy_pass $visits_origin/visit/$1;
            }

            location ~ ^/api/gateway/visits(.*) {
                proxy_pass $visits_origin/visits$1;
            }

            location ~ /api/gateway/pets(.*) {
                proxy_pass $visits_origin/pets$1$is_args$args;
            }

            location ~ /api/gateway/vets(.*) {
                proxy_pass $vets_origin/vets$1;
            }
            
            location ~ /api/gateway/bills(.*) {
                proxy_pass $bills_origin/bills$1;
            }
            
            return 404 '{"statusCode": 404, "message": "Not found", "timestamp": "$time_iso8601"}';
        }

        location @Forbidden {
            default_type application/json;
            return 403 '{"statusCode": 403, "message": "Forbidden", "timestamp": "$time_iso8601"}';
        }

    }
}