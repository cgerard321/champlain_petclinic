version: "3.9"

services:
  # -------------------
  # FRONTEND SERVICES
  # -------------------
  petclinicFrontend:
    image: petclinic-frontend
    container_name: petclinic-frontend
    pull_policy: never
    build:
      context: ./petclinic-frontend
      dockerfile: Dockerfile
      args:
        - BUILD_MODE=production
    ports:
      - "3000:3000"
    volumes:
      - ./petclinic-frontend/src:/app/src
    restart: unless-stopped
    labels:
      - homepage.group=Development
      - homepage.name=Petclinic Frontend
      - homepage.icon=https://github.com/homarr-labs/dashboard-icons/blob/main/png/firefox-developer-edition.png?raw=true
      - homepage.href=https://petclinic.benmusicgeek.synology.me/
      - homepage.description=Petclinic Frontend Container
      - homepage.siteMonitor=https://petclinic.benmusicgeek.synology.me/

  # -------------------
  # BACKEND MICROSERVICES
  # -------------------

  api-gateway:
    build: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: unless-stopped
    depends_on:
      - customers-service-reactive
      - vet-service
      - visits-service-new
      - products-service
      - cart-service
      - inventory-service
      - billing-service
      - auth-service
    labels:
      - homepage.group=Development
      - homepage.name=Petclinic Api Gateway
      - homepage.icon=https://github.com/homarr-labs/dashboard-icons/blob/main/png/kodi.png?raw=true
      - homepage.href=https://petclinic-backend.benmusicgeek.synology.me/
      - homepage.description=Petclinic Api Gateway
      - homepage.siteMonitor=https://petclinic-backend.benmusicgeek.synology.me/api/v2/gateway/vets

  visits-service-new:
    build: visits-service-new
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    depends_on:
      - mongo-visits
      - mailer-service

  inventory-service:
    build: inventory-service
    hostname: inventory
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    depends_on:
      - mongo-inventory

  vet-service:
    build: vet-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    depends_on:
      - mongo-vet
      - postgres-vet

  customers-service-reactive:
    build: customers-service-reactive
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    depends_on:
      - mongo-customers

  auth-service:
    build: auth-service
    hostname: auth
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: unless-stopped
    depends_on:
      mysql-auth:
        condition: service_healthy
      mailer-service:
        condition: service_started

  billing-service:
    build: billing-service
    hostname: billing
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    depends_on:
      - mongo-billing

  mailer-service:
    build: mailer-service
    environment:
      - SMTP_USER=champlain.petclinic@gmail.com
      - SMTP_SERVER=smtp.gmail.com
    env_file:
      - stack.env
    restart: unless-stopped

  products-service:
    build: products-service
    hostname: products-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    depends_on:
      - mongo-products

  cart-service:
    build: cart-service
    hostname: cart
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    depends_on:
      - mongo-carts

  files-service:
    build: files-service
    environment:
      - FILE_ENDPOINT=petclinic-bucket.benmusicgeek.synology.me
      - FILE_ENV=prod
    env_file:
      - stack.env
    depends_on:
      mysql-files:
        condition: service_healthy

  # -------------------
  # DATABASES
  # -------------------
  mysql-auth:
    image: mysql:5.7
    platform: linux/amd64
    ports:
      - "3310:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=auth-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - mysql-auth-data:/var/lib/mysql
      - ./data/init.d:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  mysql-files:
    image: mysql:5.7
    platform: linux/amd64
    ports:
      - "3311:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=files-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - mysql-files-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres-vet:
    image: postgres
    container_name: postgres-vet
    hostname: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=images
    ports:
      - "5432:5432"
    volumes:
      - postgres-vet-data:/var/lib/postgresql/data
    restart: unless-stopped

  # -------------------
  # MONGODB DATABASES
  # -------------------
  mongo-vet:
    image: mongo
    container_name: mongo-vet
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-vet-data:/data/db
      - mongo-vet-config:/data/configdb
    restart: unless-stopped

  mongo-billing:
    image: mongo
    container_name: mongo-billing
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-billing-data:/data/db
      - mongo-billing-config:/data/configdb
    restart: unless-stopped

  mongo-visits:
    image: mongo
    container_name: mongo-visits
    ports:
      - "27015:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-visits-data:/data/db
      - mongo-visits-config:/data/configdb
    restart: unless-stopped

  mongo-customers:
    image: mongo
    container_name: mongo-customers
    ports:
      - "27019:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-customers-data:/data/db
      - mongo-customers-config:/data/configdb
    restart: unless-stopped

  mongo-inventory:
    image: mongo
    container_name: mongo-inventory
    ports:
      - "27020:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-inventory-data:/data/db
      - mongo-inventory-config:/data/configdb
    restart: unless-stopped

  mongo-products:
    image: mongo
    container_name: mongo-products
    ports:
      - "27021:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-products-data:/data/db
      - mongo-products-config:/data/configdb
    restart: unless-stopped

  mongo-carts:
    image: mongo
    container_name: mongo-carts
    ports:
      - "27022:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-carts-data:/data/db
      - mongo-carts-config:/data/configdb
    restart: unless-stopped

  dbgate:
    image: dbgate/dbgate:latest
    container_name: dbgate
    restart: unless-stopped
    ports:
      - "8030:3000"
    environment:
      - CONNECTIONS=mysqlAuth,mysqlFiles,pgVet,mongoVet,mongoBilling,mongoVisits,mongoCustomers,mongoInventory,mongoProducts,mongoCarts

      # --------------------
      # MySQL — mysql-auth
      # --------------------
      - LABEL_mysqlAuth=MySQL (auth)
      - ENGINE_mysqlAuth=mysql@dbgate-plugin-mysql
      - SERVER_mysqlAuth=mysql-auth
      - PORT_mysqlAuth=3306
      - USER_mysqlAuth=user
      - PASSWORD_mysqlAuth=pwd
      - DATABASE_mysqlAuth=auth-db

      # --------------------
      # MySQL — mysql-files
      # --------------------
      - LABEL_mysqlFiles=MySQL (files)
      - ENGINE_mysqlFiles=mysql@dbgate-plugin-mysql
      - SERVER_mysqlFiles=mysql-files
      - PORT_mysqlFiles=3306
      - USER_mysqlFiles=user
      - PASSWORD_mysqlFiles=pwd
      - DATABASE_mysqlFiles=files-db

      # --------------------
      # PostgreSQL — postgres-vet
      # --------------------
      - LABEL_pgVet=PostgreSQL (vet)
      - ENGINE_pgVet=postgres@dbgate-plugin-postgres
      - SERVER_pgVet=postgres-vet
      - PORT_pgVet=5432
      - USER_pgVet=user
      - PASSWORD_pgVet=pwd
      - DATABASE_pgVet=images

      # --------------------
      # MongoDB — mongo-vet
      # --------------------
      - LABEL_mongoVet=MongoDB (vet)
      - ENGINE_mongoVet=mongo@dbgate-plugin-mongo
      - SERVER_mongoVet=mongo-vet
      - PORT_mongoVet=27017
      - USER_mongoVet=root
      - PASSWORD_mongoVet=password
      - AUTH_SOURCE_mongoVet=admin

      # MongoDB — mongo-billing
      - LABEL_mongoBilling=MongoDB (billing)
      - ENGINE_mongoBilling=mongo@dbgate-plugin-mongo
      - SERVER_mongoBilling=mongo-billing
      - PORT_mongoBilling=27017
      - USER_mongoBilling=root
      - PASSWORD_mongoBilling=password
      - AUTH_SOURCE_mongoBilling=admin

      # MongoDB — mongo-visits
      - LABEL_mongoVisits=MongoDB (visits)
      - ENGINE_mongoVisits=mongo@dbgate-plugin-mongo
      - SERVER_mongoVisits=mongo-visits
      - PORT_mongoVisits=27017
      - USER_mongoVisits=root
      - PASSWORD_mongoVisits=password
      - AUTH_SOURCE_mongoVisits=admin

      # MongoDB — mongo-customers
      - LABEL_mongoCustomers=MongoDB (customers)
      - ENGINE_mongoCustomers=mongo@dbgate-plugin-mongo
      - SERVER_mongoCustomers=mongo-customers
      - PORT_mongoCustomers=27017
      - USER_mongoCustomers=root
      - PASSWORD_mongoCustomers=password
      - AUTH_SOURCE_mongoCustomers=admin

      # MongoDB — mongo-inventory
      - LABEL_mongoInventory=MongoDB (inventory)
      - ENGINE_mongoInventory=mongo@dbgate-plugin-mongo
      - SERVER_mongoInventory=mongo-inventory
      - PORT_mongoInventory=27017
      - USER_mongoInventory=root
      - PASSWORD_mongoInventory=password
      - AUTH_SOURCE_mongoInventory=admin

      # MongoDB — mongo-products
      - LABEL_mongoProducts=MongoDB (products)
      - ENGINE_mongoProducts=mongo@dbgate-plugin-mongo
      - SERVER_mongoProducts=mongo-products
      - PORT_mongoProducts=27017
      - USER_mongoProducts=root
      - PASSWORD_mongoProducts=password
      - AUTH_SOURCE_mongoProducts=admin

      # MongoDB — mongo-carts
      - LABEL_mongoCarts=MongoDB (carts)
      - ENGINE_mongoCarts=mongo@dbgate-plugin-mongo
      - SERVER_mongoCarts=mongo-carts
      - PORT_mongoCarts=27017
      - USER_mongoCarts=root
      - PASSWORD_mongoCarts=password
      - AUTH_SOURCE_mongoCarts=admin
    volumes:
      - ./dbgate-data:/root/.dbgate   # persist saved connections/queries
    depends_on:
      - mysql-auth
      - mysql-files
      - postgres-vet
      - mongo-vet
      - mongo-billing
      - mongo-visits
      - mongo-customers
      - mongo-inventory
      - mongo-products
      - mongo-carts

# -------------------
# VOLUMES
# -------------------
volumes:
  mysql-auth-data:
  mongo-vet-data:
  mongo-vet-config:
  mongo-billing-data:
  mongo-billing-config:
  mongo-visits-data:
  mongo-visits-config:
  mongo-customers-data:
  mongo-customers-config:
  mongo-inventory-data:
  mongo-inventory-config:
  mongo-products-data:
  mongo-products-config:
  mongo-carts-data:
  mongo-carts-config:
  postgres-vet-data:
  mysql-files-data: