plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'io.freefair.lombok' version '6.6.1'
    id 'jacoco'
}

group = 'com.petclinic.cartservice'
version = '1.0.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext{
    mapstructVersion = "1.5.3.Final"
    lombokVersion = "1.18.26"
    lombokMapstructBindingVersion = "0.2.0"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.r2dbc:r2dbc-h2'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"


    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.squareup.okhttp3:okhttp:4.12.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
    testImplementation("org.mock-server:mockserver-netty:5.13.0")
    testImplementation("org.mock-server:mockserver-client-java:5.13.0")
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.9.0'
    testImplementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
// ✅ Use the core Flapdoodle dependency
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.12.3'

// ✅ Add this to let Spring Boot test auto-configure embedded Mongo
    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'

// ✅ Add this (required for embedded Mongo auto-start with Spring Boot 3+)
    testImplementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'





    // Testcontainers
    testImplementation 'org.testcontainers:testcontainers:1.19.7'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
    testImplementation 'org.testcontainers:mongodb:1.19.7'
    
    // WireMock
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.1.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.00
            }
        }
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
    useJUnitPlatform()
    systemProperty "spring.profiles.active", "test"
    testLogging {
        events "passed", "skipped", "failed"
    }
}
