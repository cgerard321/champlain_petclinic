name: Qodana
on:
#  workflow_dispatch:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'


#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#        with:
#          ref: ${{ github.event.pull_request.head.sha }}
#          fetch-depth: 0
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#          cache: 'gradle'
#
#      - name: Validate Gradle Wrapper
#        run: ./gradlew --version
#        working-directory: JVM/jacoco/gradle
#
#      - name: Run Tests
#        run: ./gradlew test
#        working-directory: JVM/jacoco/gradle
#
#      - name: Archive coverage data
#        uses: actions/upload-artifact@v2
#        with:
#          name: gradle-coverage-data-jacoco
#          path: JVM/jacoco/gradle/.qodana/code-coverage
#
#      - name: Qodana Scan
#        uses: JetBrains/qodana-action@main
#        env:
#          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
#        with:
#          args: "-i,JVM/jacoco/gradle,--linter,jetbrains/qodana-jvm:2023.2-eap"
#          pr-mode: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Archive coverage data  # Archive data for using by Qodana
        uses: actions/upload-artifact@v2
        with:
          name: jest-coverage-data
          path: .qodana/code-coverage

      - name: Qodana Scan  # Run Qodana
        uses: JetBrains/qodana-action@main
        env:
          QODANA_TOKEN: $${{ secrets.QODANA_TOKEN }}
        with:
          pr-mode: false
#
#jobs:
#  qodana:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#          cache: gradle
##      - uses: actions/checkout@v3
##        with:
##          fetch-depth: 0
#      - name: 'Qodana Scan'
#        uses: JetBrains/qodana-action@v2023.2
#        env:
#          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
