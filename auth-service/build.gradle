plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.3'
    id "io.freefair.lombok" version "6.0.0-m2"
    id 'jacoco'
}


group = 'com.auth'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}
ext {
    mapstructVersion = "1.4.1.Final"
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    //implementation 'org.flywaydb:flyway-core'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-jackson
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'

    implementation("org.mapstruct:mapstruct:1.5.3.Final")
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: '6.1.2'

    implementation 'mysql:mysql-connector-java'
    testImplementation('com.h2database:h2')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('com.h2database:h2')
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit-mock
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.9.0'
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/petclinic/**/AuthServiceApplication.class",
                    "**/*MapperImpl.class"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.00
            }
        }
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
    useJUnitPlatform()
}