.menuSection {
  position: relative;
  display: flex;
  justify-content: flex-end;   /* push content to the right */
  margin: 12px 0 20px;
  width: 100%;
}

.menuContainer {
  position: relative;          /* anchor the dropdown panel */
  display: flex;
  align-items: center;
  justify-content: flex-end;   /* hamburger on the far right */
  margin: 0 auto;
  width: 100%;
}


/* Make the button frame a clean icon container */
#menuIcon {
   margin-top: -8px;  
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 64px;              /* bigger button */
  height: 64px;
  cursor: pointer;
  background: transparent;
  border: none;
transition: transform 220ms cubic-bezier(.2,.7,.2,1);
}

/* rotate on hover, no drop shadow */
#menuIcon:hover {
  transform: rotate(90deg);
}

/* bar color */
.hamburgerSvg rect { fill: #1e63ff; }

.actionsMenu {
  position: absolute;
  right: 0;
  top: 68px;                                /* sits under the icon */
  min-width: 340px;                         /* consistent width */
  max-width: min(90vw, 420px);

  /* closed state (hidden by default) */
  opacity: 0;
  transform: translateY(-8px) scale(0.98);
  transform-origin: top right;
  visibility: hidden;                       /* hidden after fade completes */
  pointer-events: none;
  transition:
    opacity 220ms cubic-bezier(.2,.7,.2,1),
    transform 220ms cubic-bezier(.2,.7,.2,1),
    visibility 0s linear 220ms;             /* delay hiding so fade-out shows */

  /* panel look */
  display: block;
  background: #ffffff;
  border-radius: 0;                          /* rectangular panel */
  padding: 0;                                /* no side whitespace */
  box-shadow: 0 10px 22px rgba(0,0,0,0.15);
  z-index: 1000;
}

/* open state */
.actionsMenu[data-open="true"] {
  opacity: 1;
  transform: translateY(0) scale(1);
  visibility: visible;
  pointer-events: auto;
  transition:
    opacity 220ms cubic-bezier(.2,.7,.2,1),
    transform 220ms cubic-bezier(.2,.7,.2,1),
    visibility 0s linear 0s;                 /* show immediately */
}

/* Buttons: big full-width rectangles */
.actionsMenu :global(.btn) {
  display: block;
  width: 100%;
  padding: 16px 18px;
  font-size: 1rem;
  font-weight: 700;
  line-height: 1.2;
  margin: 0;
  background: #1e63ff !important;
  color: #ffffff !important;
  border: none !important;
  border-radius: 0 !important;               /* rectangular buttons */
  transition: transform 120ms ease, box-shadow 120ms ease, opacity 160ms ease;
}

/* hover/active/disabled */
.actionsMenu :global(.btn:hover):not(:disabled),
.actionsMenu :global(.btn:focus-visible):not(:disabled) {
  transform: translateY(-1px);
  box-shadow: 0 6px 18px rgba(30, 99, 255, 0.35);
}
.actionsMenu :global(.btn:active):not(:disabled) {
  transform: translateY(0);
  box-shadow: 0 3px 10px rgba(0,0,0,0.18);
}
.actionsMenu :global(.btn:disabled) {
  opacity: 0.55;
  cursor: not-allowed;
  background: #84a8ff !important;
}



.confirmDialog {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
  padding: 20px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  z-index: 1000;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
}

.table {
  padding-top: 20px;
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}


.addInventorytypeButton {
  text-align: initial;
  float: none;
  margin-right: 0;
}

.inventoryTable {
  border-collapse: collapse;
  width: 100%;
  table-layout: fixed;
  text-align: center;
}

.cleanTable :global(thead th),
.cleanTable :global(tbody td) {
  border-bottom: 0 !important;
}

.cleanTable :global(tbody tr:nth-of-type(odd)) {
  --bs-table-accent-bg: transparent !important;
  background-color: transparent !important;
}

.inventoryTable :global(thead th:nth-child(1)),
.inventoryTable :global(tbody td:nth-child(1)),
.inventoryTable :global(thead th:nth-child(2)),
.inventoryTable :global(tbody td:nth-child(2)),
.inventoryTable :global(thead th:nth-child(3)),
.inventoryTable :global(tbody td:nth-child(3)),
.inventoryTable :global(thead th:nth-child(5)),
.inventoryTable :global(tbody td:nth-child(5)) {
  text-align: center;
}

.fixedTable {
  table-layout: fixed;
  width: 100%;
}

.inventoryTable :global(th),
.inventoryTable :global(td) {
  padding: 8px;
  vertical-align: middle;
  border: 0 !important;
}

.pager {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 16px;
  margin: 40px 0 80px;
}

.pageNumber {
  min-width: 32px;
  text-align: center;
  font-weight: 600;
}
/* Remove dark header bar / borders & make headers ALL CAPS, left-aligned */
.inventoryTable :global(thead) {
  background: transparent !important;
  border: 0 !important;
  box-shadow: none !important;
}
.inventoryTable :global(thead tr) {
  background: transparent !important;
}
.inventoryTable :global(thead th) {
  background: transparent !important;
  border: 0 !important;
  box-shadow: none !important;
  color: #111827;                  /* dark gray text */
  font-weight: 700;
  text-transform: uppercase;       /* ALL CAPS */
  letter-spacing: 0.02em;
  text-align: left !important;     /* left-align by default */
}

/* Center & enlarge the Important checkbox in the filter row (5th column) */
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(5)) {
  text-align: center !important;   /* center that cell */
}
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(5) input[type="checkbox"]) {
  transform: scale(1.4);           /* make it bigger */
  accent-color: #1e63ff;           /* blue tick color (modern browsers) */
}

/* Optional: ensure no table borders anywhere */
.inventoryTable {
  border: 0 !important;
}
.inventoryTable :global(th),
.inventoryTable :global(td) {
  border: 0 !important;
}
/* --- 1) Divider lines (between titles & inputs, and under inputs) --- */
.inventoryTable :global(thead tr:first-of-type th) {
  border-bottom: 1px solid #e5e7eb !important;   /* line under titles */
  padding-bottom: 14px;
}
.inventoryTable :global(thead tr:nth-of-type(2) td) {
  border-bottom: 1px solid #eef2f7 !important;   /* line under inputs */
  padding-bottom: 16px;
}

/* --- 2) Center IMPORTANT / CLEAR / STATUS (title + inputs row) --- */
.inventoryTable :global(thead tr:first-of-type th:nth-child(5)),
.inventoryTable :global(thead tr:first-of-type th:nth-child(6)),
.inventoryTable :global(thead tr:first-of-type th:nth-child(7)),
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(5)),
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(6)),
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(7)) {
  text-align: center !important;
}

.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(5) input[type="checkbox"]) {
  transform: translateY(4px) scale(2.0);   /* slightly lower + bigger */
  accent-color: #1e63ff;
}


/* Make the Clear button and Status select align nicely when centered */
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(6) .btn) {
  margin: 0 auto;                      /* center the Clear button */
  display: inline-flex;
}
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(7) select) {
  margin: 0 auto;                      /* center the Status select */
  display: inline-block;
}

/* Fix IMPORTANT checkbox alignment (override Bootstrap) */
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(5) .form-check) {
  padding-left: 0 !important;                 /* kill BS padding */
  display: inline-flex !important;            /* center properly */
  align-items: center !important;
  justify-content: center !important;
}

.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(5) .form-check-input) {
  margin: 0 !important;                       /* remove default margins */
  float: none !important;
  position: static !important;
  transform: translateY(4px) scale(2.0);      /* your size + slight drop */
  accent-color: #1e63ff;
}

/* Ensure the cell itself centers the content */
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(5)) {
  text-align: center !important;
  vertical-align: middle !important;
}
.inventoryTable :global(thead tr:nth-of-type(2) td:nth-child(3) select) {
  transform: translateY(3px);     /* tiny vertical nudge */
}
/* stack: small freeze button above, then the row with arrows */
.pagerStack {
  display: flex;
  flex-direction: column;
  align-items: center;   /* center everything horizontally */
  gap: 10px;             /* space between freeze and row */
}

/* row with the two arrows and the page number */
.pagerRow {
  display: flex;
  align-items: center;
  gap: 16px;
}
